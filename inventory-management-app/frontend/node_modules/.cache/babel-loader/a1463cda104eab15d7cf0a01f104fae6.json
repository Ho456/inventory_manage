{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000/api/v1'; // Fixed: Added v1 prefix to match backend routes\n\n// Configure axios defaults\naxios.defaults.timeout = 10000; // 10 second timeout\naxios.defaults.headers.common['Content-Type'] = 'application/json';\naxios.defaults.headers.common['Accept'] = 'application/json';\n\n// Add response interceptor for better error handling\naxios.interceptors.response.use(response => response, error => {\n  if (error.code === 'ECONNABORTED') {\n    console.error('Request timeout');\n    error.message = 'Request timeout - please check your connection';\n  } else if (error.response) {\n    var _error$response$data;\n    // Server responded with error status\n    console.error('API Error:', error.response.status, error.response.data);\n    error.message = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || `Server error: ${error.response.status}`;\n  } else if (error.request) {\n    // Request made but no response received\n    console.error('Network Error:', error.request);\n    error.message = 'Network error - please check if the backend server is running';\n  }\n  return Promise.reject(error);\n});\nexport const fetchProducts = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/products`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching products:', error);\n    // Return empty array as fallback\n    return {\n      data: []\n    };\n  }\n};\nexport const fetchCategories = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/categories`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching categories:', error);\n    // Return empty array as fallback\n    return {\n      data: []\n    };\n  }\n};\nexport const createProduct = async productData => {\n  try {\n    const response = await axios.post(`${API_URL}/products`, productData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating product:', error);\n    throw new Error(error.message || 'Failed to create product');\n  }\n};\nexport const updateProduct = async (id, productData) => {\n  try {\n    const response = await axios.put(`${API_URL}/products/${id}`, productData);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating product:', error);\n    throw new Error(error.message || 'Failed to update product');\n  }\n};\nexport const deleteProduct = async id => {\n  try {\n    const response = await axios.delete(`${API_URL}/products/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting product:', error);\n    throw new Error(error.message || 'Failed to delete product');\n  }\n};\n\n// Stock management functions\nexport const updateProductStock = async (id, newQuantity) => {\n  try {\n    const response = await axios.patch(`${API_URL}/products/${id}/stock`, {\n      quantity: newQuantity\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error updating product stock:', error);\n    throw new Error(error.message || 'Failed to update product stock');\n  }\n};\nexport const adjustProductStock = async (id, adjustment) => {\n  try {\n    const response = await axios.patch(`${API_URL}/products/${id}/stock`, {\n      adjustment: adjustment\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error adjusting product stock:', error);\n    throw new Error(error.message || 'Failed to adjust product stock');\n  }\n};\n\n// Additional API functions for dashboard\nexport const fetchDashboardStats = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/dashboard/stats`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching dashboard stats:', error);\n    return {\n      totalProducts: 0,\n      totalCategories: 0,\n      lowStockItems: 0\n    };\n  }\n};\nexport const fetchDashboardReports = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/dashboard/reports`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching dashboard reports:', error);\n    return {\n      data: []\n    };\n  }\n};","map":{"version":3,"names":["axios","API_URL","defaults","timeout","headers","common","interceptors","response","use","error","code","console","message","_error$response$data","status","data","request","Promise","reject","fetchProducts","get","fetchCategories","createProduct","productData","post","Error","updateProduct","id","put","deleteProduct","delete","updateProductStock","newQuantity","patch","quantity","adjustProductStock","adjustment","fetchDashboardStats","totalProducts","totalCategories","lowStockItems","fetchDashboardReports"],"sources":["/media/snowleopard/bulk/inventory_manage/inventory-management-app/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8000/api/v1'; // Fixed: Added v1 prefix to match backend routes\n\n// Configure axios defaults\naxios.defaults.timeout = 10000; // 10 second timeout\naxios.defaults.headers.common['Content-Type'] = 'application/json';\naxios.defaults.headers.common['Accept'] = 'application/json';\n\n// Add response interceptor for better error handling\naxios.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        if (error.code === 'ECONNABORTED') {\n            console.error('Request timeout');\n            error.message = 'Request timeout - please check your connection';\n        } else if (error.response) {\n            // Server responded with error status\n            console.error('API Error:', error.response.status, error.response.data);\n            error.message = error.response.data?.message || `Server error: ${error.response.status}`;\n        } else if (error.request) {\n            // Request made but no response received\n            console.error('Network Error:', error.request);\n            error.message = 'Network error - please check if the backend server is running';\n        }\n        return Promise.reject(error);\n    }\n);\n\nexport const fetchProducts = async () => {\n    try {\n        const response = await axios.get(`${API_URL}/products`);\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching products:', error);\n        // Return empty array as fallback\n        return { data: [] };\n    }\n};\n\nexport const fetchCategories = async () => {\n    try {\n        const response = await axios.get(`${API_URL}/categories`);\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching categories:', error);\n        // Return empty array as fallback\n        return { data: [] };\n    }\n};\n\nexport const createProduct = async (productData) => {\n    try {\n        const response = await axios.post(`${API_URL}/products`, productData);\n        return response.data;\n    } catch (error) {\n        console.error('Error creating product:', error);\n        throw new Error(error.message || 'Failed to create product');\n    }\n};\n\nexport const updateProduct = async (id, productData) => {\n    try {\n        const response = await axios.put(`${API_URL}/products/${id}`, productData);\n        return response.data;\n    } catch (error) {\n        console.error('Error updating product:', error);\n        throw new Error(error.message || 'Failed to update product');\n    }\n};\n\nexport const deleteProduct = async (id) => {\n    try {\n        const response = await axios.delete(`${API_URL}/products/${id}`);\n        return response.data;\n    } catch (error) {\n        console.error('Error deleting product:', error);\n        throw new Error(error.message || 'Failed to delete product');\n    }\n};\n\n// Stock management functions\nexport const updateProductStock = async (id, newQuantity) => {\n    try {\n        const response = await axios.patch(`${API_URL}/products/${id}/stock`, {\n            quantity: newQuantity\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error updating product stock:', error);\n        throw new Error(error.message || 'Failed to update product stock');\n    }\n};\n\nexport const adjustProductStock = async (id, adjustment) => {\n    try {\n        const response = await axios.patch(`${API_URL}/products/${id}/stock`, {\n            adjustment: adjustment\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error adjusting product stock:', error);\n        throw new Error(error.message || 'Failed to adjust product stock');\n    }\n};\n\n// Additional API functions for dashboard\nexport const fetchDashboardStats = async () => {\n    try {\n        const response = await axios.get(`${API_URL}/dashboard/stats`);\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching dashboard stats:', error);\n        return { totalProducts: 0, totalCategories: 0, lowStockItems: 0 };\n    }\n};\n\nexport const fetchDashboardReports = async () => {\n    try {\n        const response = await axios.get(`${API_URL}/dashboard/reports`);\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching dashboard reports:', error);\n        return { data: [] };\n    }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}