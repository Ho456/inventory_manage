{"ast":null,"code":"var _jsxFileName = \"/media/snowleopard/bulk/inventory_manage/inventory-management-app/frontend/src/pages/Products.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProductList from '../components/ProductList';\nimport ProductForm from '../components/ProductForm';\nimport { fetchProducts } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Products = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const data = await fetchProducts();\n        // Handle paginated response\n        if (data.data) {\n          setProducts(data.data);\n        } else {\n          setProducts(data);\n        }\n      } catch (err) {\n        setError(err.message);\n        console.error('Error fetching products:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getProducts();\n  }, []);\n  const handleProductAdded = newProduct => {\n    setProducts(prev => [...prev, newProduct]);\n  };\n  const handleProductUpdated = updatedProduct => {\n    setProducts(prev => prev.map(product => product.id === updatedProduct.id ? updatedProduct : product));\n  };\n  const handleProductDeleted = deletedProductId => {\n    setProducts(prev => prev.filter(product => product.id !== deletedProductId));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading products...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error loading products: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProductForm, {\n      onProductAdded: handleProductAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProductList, {\n      products: products,\n      onProductUpdated: handleProductUpdated,\n      onProductDeleted: handleProductDeleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(Products, \"3+N/VFIgZOBgubN9oS5aTzm2qqY=\");\n_c = Products;\nexport default Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["React","useState","useEffect","ProductList","ProductForm","fetchProducts","jsxDEV","_jsxDEV","Products","_s","products","setProducts","loading","setLoading","error","setError","getProducts","data","err","message","console","handleProductAdded","newProduct","prev","handleProductUpdated","updatedProduct","map","product","id","handleProductDeleted","deletedProductId","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onProductAdded","onProductUpdated","onProductDeleted","_c","$RefreshReg$"],"sources":["/media/snowleopard/bulk/inventory_manage/inventory-management-app/frontend/src/pages/Products.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ProductList from '../components/ProductList';\nimport ProductForm from '../components/ProductForm';\nimport { fetchProducts } from '../services/api';\n\nconst Products = () => {\n    const [products, setProducts] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const getProducts = async () => {\n            try {\n                const data = await fetchProducts();\n                // Handle paginated response\n                if (data.data) {\n                    setProducts(data.data);\n                } else {\n                    setProducts(data);\n                }\n            } catch (err) {\n                setError(err.message);\n                console.error('Error fetching products:', err);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        getProducts();\n    }, []);\n\n    const handleProductAdded = (newProduct) => {\n        setProducts(prev => [...prev, newProduct]);\n    };\n\n    const handleProductUpdated = (updatedProduct) => {\n        setProducts(prev => prev.map(product => \n            product.id === updatedProduct.id ? updatedProduct : product\n        ));\n    };\n\n    const handleProductDeleted = (deletedProductId) => {\n        setProducts(prev => prev.filter(product => product.id !== deletedProductId));\n    };\n\n    if (loading) {\n        return <div>Loading products...</div>;\n    }\n\n    if (error) {\n        return <div>Error loading products: {error}</div>;\n    }\n\n    return (\n        <div>\n            <h1>Products</h1>\n            <ProductForm onProductAdded={handleProductAdded} />\n            <ProductList \n                products={products} \n                onProductUpdated={handleProductUpdated}\n                onProductDeleted={handleProductDeleted}\n            />\n        </div>\n    );\n};\n\nexport default Products;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,aAAa,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,IAAI,GAAG,MAAMZ,aAAa,CAAC,CAAC;QAClC;QACA,IAAIY,IAAI,CAACA,IAAI,EAAE;UACXN,WAAW,CAACM,IAAI,CAACA,IAAI,CAAC;QAC1B,CAAC,MAAM;UACHN,WAAW,CAACM,IAAI,CAAC;QACrB;MACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVH,QAAQ,CAACG,GAAG,CAACC,OAAO,CAAC;QACrBC,OAAO,CAACN,KAAK,CAAC,0BAA0B,EAAEI,GAAG,CAAC;MAClD,CAAC,SAAS;QACNL,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDG,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,kBAAkB,GAAIC,UAAU,IAAK;IACvCX,WAAW,CAACY,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAED,UAAU,CAAC,CAAC;EAC9C,CAAC;EAED,MAAME,oBAAoB,GAAIC,cAAc,IAAK;IAC7Cd,WAAW,CAACY,IAAI,IAAIA,IAAI,CAACG,GAAG,CAACC,OAAO,IAChCA,OAAO,CAACC,EAAE,KAAKH,cAAc,CAACG,EAAE,GAAGH,cAAc,GAAGE,OACxD,CAAC,CAAC;EACN,CAAC;EAED,MAAME,oBAAoB,GAAIC,gBAAgB,IAAK;IAC/CnB,WAAW,CAACY,IAAI,IAAIA,IAAI,CAACQ,MAAM,CAACJ,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKE,gBAAgB,CAAC,CAAC;EAChF,CAAC;EAED,IAAIlB,OAAO,EAAE;IACT,oBAAOL,OAAA;MAAAyB,QAAA,EAAK;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACzC;EAEA,IAAItB,KAAK,EAAE;IACP,oBAAOP,OAAA;MAAAyB,QAAA,GAAK,0BAAwB,EAAClB,KAAK;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACrD;EAEA,oBACI7B,OAAA;IAAAyB,QAAA,gBACIzB,OAAA;MAAAyB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB7B,OAAA,CAACH,WAAW;MAACiC,cAAc,EAAEhB;IAAmB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnD7B,OAAA,CAACJ,WAAW;MACRO,QAAQ,EAAEA,QAAS;MACnB4B,gBAAgB,EAAEd,oBAAqB;MACvCe,gBAAgB,EAAEV;IAAqB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAC3B,EAAA,CA3DID,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AA6Dd,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}